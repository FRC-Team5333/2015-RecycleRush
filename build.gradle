/**
Template file for classes using GradleRIO
@author Jaci
*/

buildscript {
  repositories {
  mavenCentral()
  maven {
    name = "GradleRIO"
    url = "http://dev.imjac.in/maven"
  }
  }
  dependencies {
    classpath group: 'jaci.openrio.gradle', name: 'GradleRIO', version: '1.1.6'			//Change this line if you wish to Update GradleRIO
  }
}

apply plugin: 'GradleRIO'                                 //Apply the GradleRIO plugin
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

gradlerio.robotClass = "frc.team5333.core.RobotImpl"   //The class for the main Robot Class. Used in manifest
//gradlerio.robotClass = "jaci.openrio.toast.core.Toast"
gradlerio.team = "5333"                                   //Your FRC team number (e.g. 5333 for team 'Can't C#', or 47 for Chief Delphi)
//gradlerio.rioIP = "10.53.33.20"                         //Uncomment to specify the IP address of the RIO

def robotManifest = {
  attributes 'Main-Class': 'edu.wpi.first.wpilibj.RobotBase'
  attributes 'Robot-Class': 'jaci.openrio.toast.core.Toast'
  attributes 'Toast-Class': gradlerio.robotClass
}

repositories {
  maven {
    name = "Toast"
    url = "http://dev.imjac.in/maven"
  }
}

dependencies {
  //compile fileTree(dir: 'libs', include:'*.jar')
  //compile fileTree(dir: '../../../OpenRIO/Toast/build/libs', include: '*-DEV.jar')
  compile group: 'jaci.openrio.toast', name: 'Toast', version: '0.1.1'    //Change this line to update Toast
}

jar {
  from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  manifest robotManifest
}

task genJavadoc(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives genJavadoc
}
